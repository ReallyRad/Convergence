TODO
- First have large steps, then use 1DB steps â€“ maybe like here in Ableton:
- on end screen show the signal detection values
- randomise order of online and offline
- merge online and offline in same rating. use the offline rating to decide the volume change.
- log how many trial were with and without stimulus
- change the volume in practice as well. do -5dB every time 
- don't inclue response time in trials where there is no sound for the average response time calculation
- set initial volume as serialized parameter so it can be adjusted
- test the web version on some hosting online
- merge online and offline so that we show yes/no buttons before the confidence rating. no longer need an OK button. 

DONE 
- the number of tp, fp, tn, fn, mean reaction tiems, mean confidence ratings 
- reimplement volume decrease
- Firebaase backend for Signal Detection Measures (Nr of TP, FP, TN, FN) RT (duration for decision) 
- log answers for online and offline 
- Stop the Test after 15x presenting noise only
- see if better to implmeent firebase before feedback screen
- check if OK to have confidence response in timer when doing offline rating.
- adjust the probaility of showing the Noise only file, and the 1 Up/1Down algorithm.
- audio decrease logic
- GUI flow
- end screen 
- Confidence Rating (VAS)
- skip through introductions.
- remove start OK button, switch panels when sound ends
- play sound on start sreen
- disable OK button 
- First 5 Trials without 33% Noise probability



[{"confidence":0.7825520634651184,"response":0,"responseTime":5033,"responseType":1},
 {"confidence":0.7434895634651184,"response":0,"responseTime":6590,"responseType":0},
 {"confidence":0.6393229365348816,"response":0,"responseTime":6369,"responseType":0},{"confidence":0.6888020634651184,"response":1,"responseTime":0,"responseType":0},{"confidence":0.6822916269302368,"response":0,"responseTime":4447,"responseType":1}]